- content_for :head do
  :javascript

    var geooptions = {
    enableHighAccuracy: true,
    timeout: 10000,
    maximumAge: 0
    };

    function geosuccess(pos) {
    var crd = pos.coords;
    let data = new FormData(this.element);
    var token = document.getElementsByName("csrf-token")[0].content;
    console.log('csrf token:',token);
    console.log(`Latitude : ${crd.latitude}`);
    console.log(`Longitude: ${crd.longitude}`);
    console.log(`More or less ${crd.accuracy} meters.`);
    data.set('latitude', crd.latitude);
    data.set('longitude', crd.longitude);
    data.set('actiontype', "#{@at.id}");
    Rails.ajax({
      type: "POST",
      url: '/v1/entities/checkin_set_location',
      headers: {'X-Requested-With': 'XMLHttpRequest', 'X-CSRF-Token': token, 'Content-Type': 'application/json', 'Accept': 'application/json'},
      data: {'latitude': crd.latitude, 'longitude': crd.longitude, 'actiontype': "#{@at.id}" }
    });

    //fetch('/v1/entities/checkin_set_location', {method: 'POST',
    //     headers: {'X-Requested-With': 'XMLHttpRequest', 'X-CSRF-Token': token, 'Content-Type': 'application/json', 'Accept': 'application/json'},
    //     body: {'latitude': crd.latitude, 'longitude': crd.longitude, 'actiontype': "#{@at.id}" }});
    //}

    function geoerror(err) {
    console.warn(`ERROR(${err.code}): ${err.message}`);
    }

    document.addEventListener('readystatechange', event => {
    // When HTML/DOM elements are ready:
    if (event.target.readyState === "interactive") {   //does same as:  ..addEventListener("DOMContentLoaded"..
       console.log("start getUserLocation");
       navigator.geolocation.getCurrentPosition(geosuccess, geoerror, geooptions);
       console.log("after getUserLocation");
    }
    // When window loaded ( external resources are loaded too- `css`,`src`, etc...)
    //if (event.target.readyState === "complete") {
    //    console.log("external resoursces done");
    //}
    });



%h3
  Checkin
  = @bin.name
%h4
  Collection tracker is:
  = @at.inspect

= render 'bins/bins', locals: {bin: @bin}
